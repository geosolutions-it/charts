apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "geoserver.fullname" . }}
  labels:
    {{- include "geoserver.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "geoserver.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "geoserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "geoserver.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "geoserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-myservice
          image: busybox:1.28
          env:
            - name: POD_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: gs-datadir
              mountPath: /var/geoserver/data_dir
            - name: gs-memdumps
              mountPath: /var/geoserver/memory_dumps
            - name: logs
              mountPath: /app-logs/geoserver/logs
            - name: audits
              mountPath: /app-logs/geoserver/audits
            - name: tomcat-logs
              mountPath: /app-logs/geoserver/tomcat-logs
          command: ['sh', '-c', 'mkdir -p /app-logs/geoserver/tomcat-logs/$(POD_HOSTNAME) && mkdir -p /app-logs/geoserver/audits/$(POD_HOSTNAME) && mkdir -p /app-logs/geoserver/logs/$(POD_HOSTNAME) && mkdir -p /var/geoserver/memory_dumps/$(POD_HOSTNAME) && chown -R 1000:1000 /app-logs && chown -R 1000:1000 /var/geoserver']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # - name: GEOSERVER_APP_NAME
            #   value: geoserver-cluster
            - name: GEOSERVER_LOG_LOCATION
              value: /var/geoserver/logs/$(POD_HOSTNAME).log
            - name: GEOSERVER_AUDIT_PATH
              value: /var/geoserver/audits
            - name: GEOSERVER_HEAP_DUMP_DIR
              value: /var/geoserver/memory_dumps
            - name: GEOSERVER_DATA_DIR
              value: /var/geoserver/datadir
            - name: GEOWEBCACHE_CONFIG_DIR
              value: $(GEOSERVER_DATA_DIR)/gwc
            - name: GEOWEBCACHE_CACHE_DIR
              value: $(GEOSERVER_DATA_DIR)/gwc_cache_dir
            - name: JAVA_OPTS
              value: "-Xms2G -Xmx4G -Djava.awt.headless=true -server -Dfile.encoding=UTF8 -Djavax.servlet.request.encoding=UTF-8 -Djavax.servlet.response.encoding=UTF-8 -XX:SoftRefLRUPolicyMSPerMB=36000 -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5 -Dorg.geotools.coverage.jaiext.enabled=true -Duser.timezone=UTC -Dorg.geotools.shapefile.datetime=true -DGEOSERVER_LOG_LOCATION=/var/geoserver/logs/geoserver.log -DGEOWEBCACHE_CONFIG_DIR=/var/geoserver/datadir/gwc -DGEOWEBCACHE_CACHE_DIR=/var/geoserver/datadir/gwc_cache_dir -DNETCDF_DATA_DIR=/var/geoserver/netcdf_data_dir -DGRIB_CACHE_DIR=/var/geoserver/grib_cache_dir -DGEOSERVER_CSRF_DISABLED=true -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$(GEOSERVER_HEAP_DUMP_DIR)/$(POD_HOSTNAME).hprof -DGEOSERVER_DATA_DIR=$(GEOSERVER_DATA_DIR) -DGEOSERVER_AUDIT_PATH=$(GEOSERVER_AUDIT_PATH) -Dpod.hostname=$(POD_HOSTNAME)"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: ajp
              containerPort: 8009
              protocol: TCP
          startupProbe:
            httpGet:
              path: /geoserver/index.html
              port: http
            failureThreshold: 36
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /geoserver/index.html
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /geoserver/index.html
              port: http
            successThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: context
              mountPath: /usr/local/tomcat/conf/context.xml
              subPath: context.xml
              readOnly: true
            - name: server-xml
              mountPath: /usr/local/tomcat/conf/server.xml
              subPath: server.xml
              readOnly: true
            - name: masterpwd
              mountPath: "/var/geoserver/data_dir/security/masterpw/default/passwd"
              subPath: master_passwd
              readOnly: true
            - name: gs-datadir
              mountPath: /var/geoserver/data_dir
            - name: gs-memdumps
              mountPath: /var/geoserver/memory_dumps
              subPathExpr: $(POD_HOSTNAME)
            - name: audits
              mountPath: /var/geoserver/audits
              subPathExpr: $(POD_HOSTNAME)
            - name: logs
              mountPath: /var/geoserver/logs
              subPathExpr: $(POD_HOSTNAME)
            - name: tomcat-logs
              mountPath: /usr/local/tomcat/logs
              subPathExpr: $(POD_HOSTNAME)
        {{- if .Values.postgis.enabled }}
        - name: postgis
          image: {{ .Values.postgis.image }}
          imagePullPolicy: {{ .Values.postgis.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgis.env.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgis.env.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "geoserver.fullname" . }}
                  key: POSTGIS_PASSWORD
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: postgresql
            failureThreshold: 12
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: postgresql
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: postgresql
          resources:
            {{- toYaml .Values.postgis.resources | nindent 12 }}
          volumeMounts:
            - name: postgis-persistent
              mountPath: /var/lib/postgresql
        {{- end }}
      volumes:
      - name: gs-datadir
        persistentVolumeClaim:
          claimName: {{ include "geoserver.fullname" . }}-datadir
      - name: gs-memdumps
        persistentVolumeClaim:
          claimName: {{ include "geoserver.fullname" . }}-memdumps
      - name: masterpwd
        secret:
          secretName: {{ include "geoserver.fullname" . }}
          items:
            - key: GEOSERVER_ADMIN_PASSWORD
              path: master_passwd
      - name: context
        secret:
          secretName: {{ include "geoserver.fullname" .}}-context
      - name: logs
        hostPath:
          path: /app-logs/geoserver/logs
          type: DirectoryOrCreate
      - name: audits
        hostPath:
          path: /app-logs/geoserver/audits
          type: DirectoryOrCreate
      - name: tomcat-logs
        hostPath:
          path: /app-logs/geoserver/tomcat-logs
          type: DirectoryOrCreate
      - name: server-xml
        configMap:
          name: geoserver
          items:
            - key: server.xml
              path: server.xml
      {{- if .Values.postgis.enabled }}
      - name: postgis-persistent
        persistentVolumeClaim:
          claimName: {{ include "geoserver.fullname" . }}-postgis
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
